// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.4
// source: tensorflow/core/util/event.proto

package event_go_proto

import (
	summary_go_proto "github.com/wamuir/graft/tensorflow/core/framework/summary_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Current health status of a worker.
type WorkerHealth int32

const (
	WorkerHealth_OK                       WorkerHealth = 0 // By default a worker is healthy.
	WorkerHealth_RECEIVED_SHUTDOWN_SIGNAL WorkerHealth = 1
	WorkerHealth_INTERNAL_ERROR           WorkerHealth = 2
	WorkerHealth_SHUTTING_DOWN            WorkerHealth = 3 // Worker has been instructed to shutdown after a timeout.
)

// Enum value maps for WorkerHealth.
var (
	WorkerHealth_name = map[int32]string{
		0: "OK",
		1: "RECEIVED_SHUTDOWN_SIGNAL",
		2: "INTERNAL_ERROR",
		3: "SHUTTING_DOWN",
	}
	WorkerHealth_value = map[string]int32{
		"OK":                       0,
		"RECEIVED_SHUTDOWN_SIGNAL": 1,
		"INTERNAL_ERROR":           2,
		"SHUTTING_DOWN":            3,
	}
)

func (x WorkerHealth) Enum() *WorkerHealth {
	p := new(WorkerHealth)
	*p = x
	return p
}

func (x WorkerHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_util_event_proto_enumTypes[0].Descriptor()
}

func (WorkerHealth) Type() protoreflect.EnumType {
	return &file_tensorflow_core_util_event_proto_enumTypes[0]
}

func (x WorkerHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerHealth.Descriptor instead.
func (WorkerHealth) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{0}
}

// Indicates the behavior of the worker when an internal error or shutdown
// signal is received.
type WorkerShutdownMode int32

const (
	WorkerShutdownMode_DEFAULT                WorkerShutdownMode = 0
	WorkerShutdownMode_NOT_CONFIGURED         WorkerShutdownMode = 1
	WorkerShutdownMode_WAIT_FOR_COORDINATOR   WorkerShutdownMode = 2
	WorkerShutdownMode_SHUTDOWN_AFTER_TIMEOUT WorkerShutdownMode = 3
)

// Enum value maps for WorkerShutdownMode.
var (
	WorkerShutdownMode_name = map[int32]string{
		0: "DEFAULT",
		1: "NOT_CONFIGURED",
		2: "WAIT_FOR_COORDINATOR",
		3: "SHUTDOWN_AFTER_TIMEOUT",
	}
	WorkerShutdownMode_value = map[string]int32{
		"DEFAULT":                0,
		"NOT_CONFIGURED":         1,
		"WAIT_FOR_COORDINATOR":   2,
		"SHUTDOWN_AFTER_TIMEOUT": 3,
	}
)

func (x WorkerShutdownMode) Enum() *WorkerShutdownMode {
	p := new(WorkerShutdownMode)
	*p = x
	return p
}

func (x WorkerShutdownMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerShutdownMode) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_util_event_proto_enumTypes[1].Descriptor()
}

func (WorkerShutdownMode) Type() protoreflect.EnumType {
	return &file_tensorflow_core_util_event_proto_enumTypes[1]
}

func (x WorkerShutdownMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerShutdownMode.Descriptor instead.
func (WorkerShutdownMode) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{1}
}

// Deprecated: Do not use.
type LogMessage_Level int32

const (
	LogMessage_UNKNOWN LogMessage_Level = 0
	// Note: The logging level 10 cannot be named DEBUG. Some software
	// projects compile their C/C++ code with -DDEBUG in debug builds. So the
	// C++ code generated from this file should not have an identifier named
	// DEBUG.
	LogMessage_DEBUGGING LogMessage_Level = 10
	LogMessage_INFO      LogMessage_Level = 20
	LogMessage_WARN      LogMessage_Level = 30
	LogMessage_ERROR     LogMessage_Level = 40
	LogMessage_FATAL     LogMessage_Level = 50
)

// Enum value maps for LogMessage_Level.
var (
	LogMessage_Level_name = map[int32]string{
		0:  "UNKNOWN",
		10: "DEBUGGING",
		20: "INFO",
		30: "WARN",
		40: "ERROR",
		50: "FATAL",
	}
	LogMessage_Level_value = map[string]int32{
		"UNKNOWN":   0,
		"DEBUGGING": 10,
		"INFO":      20,
		"WARN":      30,
		"ERROR":     40,
		"FATAL":     50,
	}
)

func (x LogMessage_Level) Enum() *LogMessage_Level {
	p := new(LogMessage_Level)
	*p = x
	return p
}

func (x LogMessage_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogMessage_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_util_event_proto_enumTypes[2].Descriptor()
}

func (LogMessage_Level) Type() protoreflect.EnumType {
	return &file_tensorflow_core_util_event_proto_enumTypes[2]
}

func (x LogMessage_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogMessage_Level.Descriptor instead.
func (LogMessage_Level) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{1, 0}
}

type SessionLog_SessionStatus int32

const (
	SessionLog_STATUS_UNSPECIFIED SessionLog_SessionStatus = 0
	SessionLog_START              SessionLog_SessionStatus = 1
	SessionLog_STOP               SessionLog_SessionStatus = 2
	SessionLog_CHECKPOINT         SessionLog_SessionStatus = 3
)

// Enum value maps for SessionLog_SessionStatus.
var (
	SessionLog_SessionStatus_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "START",
		2: "STOP",
		3: "CHECKPOINT",
	}
	SessionLog_SessionStatus_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"START":              1,
		"STOP":               2,
		"CHECKPOINT":         3,
	}
)

func (x SessionLog_SessionStatus) Enum() *SessionLog_SessionStatus {
	p := new(SessionLog_SessionStatus)
	*p = x
	return p
}

func (x SessionLog_SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionLog_SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_util_event_proto_enumTypes[3].Descriptor()
}

func (SessionLog_SessionStatus) Type() protoreflect.EnumType {
	return &file_tensorflow_core_util_event_proto_enumTypes[3]
}

func (x SessionLog_SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionLog_SessionStatus.Descriptor instead.
func (SessionLog_SessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{2, 0}
}

// Protocol buffer representing an event that happened during
// the execution of a Brain model.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp of the event.
	WallTime float64 `protobuf:"fixed64,1,opt,name=wall_time,json=wallTime,proto3" json:"wall_time,omitempty"`
	// Global step of the event.
	Step int64 `protobuf:"varint,2,opt,name=step,proto3" json:"step,omitempty"`
	// Types that are assignable to What:
	//	*Event_FileVersion
	//	*Event_GraphDef
	//	*Event_Summary
	//	*Event_LogMessage
	//	*Event_SessionLog
	//	*Event_TaggedRunMetadata
	//	*Event_MetaGraphDef
	What isEvent_What `protobuf_oneof:"what"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetWallTime() float64 {
	if x != nil {
		return x.WallTime
	}
	return 0
}

func (x *Event) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (m *Event) GetWhat() isEvent_What {
	if m != nil {
		return m.What
	}
	return nil
}

func (x *Event) GetFileVersion() string {
	if x, ok := x.GetWhat().(*Event_FileVersion); ok {
		return x.FileVersion
	}
	return ""
}

func (x *Event) GetGraphDef() []byte {
	if x, ok := x.GetWhat().(*Event_GraphDef); ok {
		return x.GraphDef
	}
	return nil
}

func (x *Event) GetSummary() *summary_go_proto.Summary {
	if x, ok := x.GetWhat().(*Event_Summary); ok {
		return x.Summary
	}
	return nil
}

// Deprecated: Do not use.
func (x *Event) GetLogMessage() *LogMessage {
	if x, ok := x.GetWhat().(*Event_LogMessage); ok {
		return x.LogMessage
	}
	return nil
}

func (x *Event) GetSessionLog() *SessionLog {
	if x, ok := x.GetWhat().(*Event_SessionLog); ok {
		return x.SessionLog
	}
	return nil
}

func (x *Event) GetTaggedRunMetadata() *TaggedRunMetadata {
	if x, ok := x.GetWhat().(*Event_TaggedRunMetadata); ok {
		return x.TaggedRunMetadata
	}
	return nil
}

func (x *Event) GetMetaGraphDef() []byte {
	if x, ok := x.GetWhat().(*Event_MetaGraphDef); ok {
		return x.MetaGraphDef
	}
	return nil
}

type isEvent_What interface {
	isEvent_What()
}

type Event_FileVersion struct {
	// An event file was started, with the specified version.
	// This is use to identify the contents of the record IO files
	// easily.  Current version is "brain.Event:2".  All versions
	// start with "brain.Event:".
	FileVersion string `protobuf:"bytes,3,opt,name=file_version,json=fileVersion,proto3,oneof"`
}

type Event_GraphDef struct {
	// An encoded version of a GraphDef.
	GraphDef []byte `protobuf:"bytes,4,opt,name=graph_def,json=graphDef,proto3,oneof"`
}

type Event_Summary struct {
	// A summary was generated.
	Summary *summary_go_proto.Summary `protobuf:"bytes,5,opt,name=summary,proto3,oneof"`
}

type Event_LogMessage struct {
	// The user output a log message. This was theoretically used by the defunct
	// tensorboard_logging module, which has since been removed; this field is
	// now deprecated and should not be used.
	//
	// Deprecated: Do not use.
	LogMessage *LogMessage `protobuf:"bytes,6,opt,name=log_message,json=logMessage,proto3,oneof"`
}

type Event_SessionLog struct {
	// The state of the session which can be used for restarting after crashes.
	SessionLog *SessionLog `protobuf:"bytes,7,opt,name=session_log,json=sessionLog,proto3,oneof"`
}

type Event_TaggedRunMetadata struct {
	// The metadata returned by running a session.run() call.
	TaggedRunMetadata *TaggedRunMetadata `protobuf:"bytes,8,opt,name=tagged_run_metadata,json=taggedRunMetadata,proto3,oneof"`
}

type Event_MetaGraphDef struct {
	// An encoded version of a MetaGraphDef.
	MetaGraphDef []byte `protobuf:"bytes,9,opt,name=meta_graph_def,json=metaGraphDef,proto3,oneof"`
}

func (*Event_FileVersion) isEvent_What() {}

func (*Event_GraphDef) isEvent_What() {}

func (*Event_Summary) isEvent_What() {}

func (*Event_LogMessage) isEvent_What() {}

func (*Event_SessionLog) isEvent_What() {}

func (*Event_TaggedRunMetadata) isEvent_What() {}

func (*Event_MetaGraphDef) isEvent_What() {}

// Protocol buffer used for logging messages to the events file.
//
// This was theoretically used by the defunct tensorboard_logging module, which
// has been removed; this message is now deprecated and should not be used.
//
// Deprecated: Do not use.
type LogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level   LogMessage_Level `protobuf:"varint,1,opt,name=level,proto3,enum=tensorflow.LogMessage_Level" json:"level,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogMessage) Reset() {
	*x = LogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessage) ProtoMessage() {}

func (x *LogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessage.ProtoReflect.Descriptor instead.
func (*LogMessage) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{1}
}

func (x *LogMessage) GetLevel() LogMessage_Level {
	if x != nil {
		return x.Level
	}
	return LogMessage_UNKNOWN
}

func (x *LogMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Protocol buffer used for logging session state.
type SessionLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status SessionLog_SessionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=tensorflow.SessionLog_SessionStatus" json:"status,omitempty"`
	// This checkpoint_path contains both the path and filename.
	CheckpointPath string `protobuf:"bytes,2,opt,name=checkpoint_path,json=checkpointPath,proto3" json:"checkpoint_path,omitempty"`
	Msg            string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SessionLog) Reset() {
	*x = SessionLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionLog) ProtoMessage() {}

func (x *SessionLog) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionLog.ProtoReflect.Descriptor instead.
func (*SessionLog) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{2}
}

func (x *SessionLog) GetStatus() SessionLog_SessionStatus {
	if x != nil {
		return x.Status
	}
	return SessionLog_STATUS_UNSPECIFIED
}

func (x *SessionLog) GetCheckpointPath() string {
	if x != nil {
		return x.CheckpointPath
	}
	return ""
}

func (x *SessionLog) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// For logging the metadata output for a single session.run() call.
type TaggedRunMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tag name associated with this metadata.
	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	// Byte-encoded version of the `RunMetadata` proto in order to allow lazy
	// deserialization.
	RunMetadata []byte `protobuf:"bytes,2,opt,name=run_metadata,json=runMetadata,proto3" json:"run_metadata,omitempty"`
}

func (x *TaggedRunMetadata) Reset() {
	*x = TaggedRunMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaggedRunMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaggedRunMetadata) ProtoMessage() {}

func (x *TaggedRunMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaggedRunMetadata.ProtoReflect.Descriptor instead.
func (*TaggedRunMetadata) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{3}
}

func (x *TaggedRunMetadata) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *TaggedRunMetadata) GetRunMetadata() []byte {
	if x != nil {
		return x.RunMetadata
	}
	return nil
}

type WatchdogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeoutMs int64 `protobuf:"varint,1,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
}

func (x *WatchdogConfig) Reset() {
	*x = WatchdogConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchdogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchdogConfig) ProtoMessage() {}

func (x *WatchdogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchdogConfig.ProtoReflect.Descriptor instead.
func (*WatchdogConfig) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{4}
}

func (x *WatchdogConfig) GetTimeoutMs() int64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

type RequestedExitCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *RequestedExitCode) Reset() {
	*x = RequestedExitCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestedExitCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestedExitCode) ProtoMessage() {}

func (x *RequestedExitCode) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestedExitCode.ProtoReflect.Descriptor instead.
func (*RequestedExitCode) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{5}
}

func (x *RequestedExitCode) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type WorkerHeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShutdownMode   WorkerShutdownMode `protobuf:"varint,1,opt,name=shutdown_mode,json=shutdownMode,proto3,enum=tensorflow.WorkerShutdownMode" json:"shutdown_mode,omitempty"`
	WatchdogConfig *WatchdogConfig    `protobuf:"bytes,2,opt,name=watchdog_config,json=watchdogConfig,proto3" json:"watchdog_config,omitempty"`
	ExitCode       *RequestedExitCode `protobuf:"bytes,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *WorkerHeartbeatRequest) Reset() {
	*x = WorkerHeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerHeartbeatRequest) ProtoMessage() {}

func (x *WorkerHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*WorkerHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{6}
}

func (x *WorkerHeartbeatRequest) GetShutdownMode() WorkerShutdownMode {
	if x != nil {
		return x.ShutdownMode
	}
	return WorkerShutdownMode_DEFAULT
}

func (x *WorkerHeartbeatRequest) GetWatchdogConfig() *WatchdogConfig {
	if x != nil {
		return x.WatchdogConfig
	}
	return nil
}

func (x *WorkerHeartbeatRequest) GetExitCode() *RequestedExitCode {
	if x != nil {
		return x.ExitCode
	}
	return nil
}

type WorkerHeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthStatus WorkerHealth `protobuf:"varint,1,opt,name=health_status,json=healthStatus,proto3,enum=tensorflow.WorkerHealth" json:"health_status,omitempty"`
	WorkerLog    []*Event     `protobuf:"bytes,2,rep,name=worker_log,json=workerLog,proto3" json:"worker_log,omitempty"`
	Hostname     string       `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *WorkerHeartbeatResponse) Reset() {
	*x = WorkerHeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_util_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerHeartbeatResponse) ProtoMessage() {}

func (x *WorkerHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_util_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*WorkerHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_util_event_proto_rawDescGZIP(), []int{7}
}

func (x *WorkerHeartbeatResponse) GetHealthStatus() WorkerHealth {
	if x != nil {
		return x.HealthStatus
	}
	return WorkerHealth_OK
}

func (x *WorkerHeartbeatResponse) GetWorkerLog() []*Event {
	if x != nil {
		return x.WorkerLog
	}
	return nil
}

func (x *WorkerHeartbeatResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

var File_tensorflow_core_util_event_proto protoreflect.FileDescriptor

var file_tensorflow_core_util_event_proto_rawDesc = []byte{
	0x0a, 0x20, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x1a, 0x27,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x03, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x12, 0x23, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x64, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x02, 0x18, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x12, 0x4f, 0x0a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x75, 0x6e, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x61, 0x67, 0x67,
	0x65, 0x64, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x11, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x64, 0x65, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x65,
	0x74, 0x61, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x42, 0x06, 0x0a, 0x04, 0x77, 0x68,
	0x61, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x6f,
	0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x51, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x42, 0x55, 0x47, 0x47, 0x49,
	0x4e, 0x47, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x14, 0x12, 0x08,
	0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x1e, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x28, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41, 0x54, 0x41, 0x4c, 0x10, 0x32, 0x1a, 0x02,
	0x18, 0x01, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xd3, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x4c,
	0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x03, 0x22, 0x48, 0x0a, 0x11,
	0x54, 0x61, 0x67, 0x67, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x75, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x0e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x64,
	0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x22, 0x30, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x45, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x16, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53,
	0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x64, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a,
	0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x17, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f,
	0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x2a, 0x5b, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x52,
	0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x53, 0x48, 0x55, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x03,
	0x2a, 0x6b, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c,
	0x54, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x41, 0x49, 0x54, 0x5f,
	0x46, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x49, 0x4e, 0x41, 0x54, 0x4f, 0x52, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x41, 0x46,
	0x54, 0x45, 0x52, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x03, 0x42, 0x70, 0x0a,
	0x13, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x42, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xf8, 0x01, 0x01, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_util_event_proto_rawDescOnce sync.Once
	file_tensorflow_core_util_event_proto_rawDescData = file_tensorflow_core_util_event_proto_rawDesc
)

func file_tensorflow_core_util_event_proto_rawDescGZIP() []byte {
	file_tensorflow_core_util_event_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_util_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_util_event_proto_rawDescData)
	})
	return file_tensorflow_core_util_event_proto_rawDescData
}

var file_tensorflow_core_util_event_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_tensorflow_core_util_event_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_tensorflow_core_util_event_proto_goTypes = []interface{}{
	(WorkerHealth)(0),                // 0: tensorflow.WorkerHealth
	(WorkerShutdownMode)(0),          // 1: tensorflow.WorkerShutdownMode
	(LogMessage_Level)(0),            // 2: tensorflow.LogMessage.Level
	(SessionLog_SessionStatus)(0),    // 3: tensorflow.SessionLog.SessionStatus
	(*Event)(nil),                    // 4: tensorflow.Event
	(*LogMessage)(nil),               // 5: tensorflow.LogMessage
	(*SessionLog)(nil),               // 6: tensorflow.SessionLog
	(*TaggedRunMetadata)(nil),        // 7: tensorflow.TaggedRunMetadata
	(*WatchdogConfig)(nil),           // 8: tensorflow.WatchdogConfig
	(*RequestedExitCode)(nil),        // 9: tensorflow.RequestedExitCode
	(*WorkerHeartbeatRequest)(nil),   // 10: tensorflow.WorkerHeartbeatRequest
	(*WorkerHeartbeatResponse)(nil),  // 11: tensorflow.WorkerHeartbeatResponse
	(*summary_go_proto.Summary)(nil), // 12: tensorflow.Summary
}
var file_tensorflow_core_util_event_proto_depIdxs = []int32{
	12, // 0: tensorflow.Event.summary:type_name -> tensorflow.Summary
	5,  // 1: tensorflow.Event.log_message:type_name -> tensorflow.LogMessage
	6,  // 2: tensorflow.Event.session_log:type_name -> tensorflow.SessionLog
	7,  // 3: tensorflow.Event.tagged_run_metadata:type_name -> tensorflow.TaggedRunMetadata
	2,  // 4: tensorflow.LogMessage.level:type_name -> tensorflow.LogMessage.Level
	3,  // 5: tensorflow.SessionLog.status:type_name -> tensorflow.SessionLog.SessionStatus
	1,  // 6: tensorflow.WorkerHeartbeatRequest.shutdown_mode:type_name -> tensorflow.WorkerShutdownMode
	8,  // 7: tensorflow.WorkerHeartbeatRequest.watchdog_config:type_name -> tensorflow.WatchdogConfig
	9,  // 8: tensorflow.WorkerHeartbeatRequest.exit_code:type_name -> tensorflow.RequestedExitCode
	0,  // 9: tensorflow.WorkerHeartbeatResponse.health_status:type_name -> tensorflow.WorkerHealth
	4,  // 10: tensorflow.WorkerHeartbeatResponse.worker_log:type_name -> tensorflow.Event
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_tensorflow_core_util_event_proto_init() }
func file_tensorflow_core_util_event_proto_init() {
	if File_tensorflow_core_util_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_util_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_util_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_util_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_util_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaggedRunMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_util_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchdogConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_util_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestedExitCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_util_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerHeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_util_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerHeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tensorflow_core_util_event_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_FileVersion)(nil),
		(*Event_GraphDef)(nil),
		(*Event_Summary)(nil),
		(*Event_LogMessage)(nil),
		(*Event_SessionLog)(nil),
		(*Event_TaggedRunMetadata)(nil),
		(*Event_MetaGraphDef)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_util_event_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_util_event_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_util_event_proto_depIdxs,
		EnumInfos:         file_tensorflow_core_util_event_proto_enumTypes,
		MessageInfos:      file_tensorflow_core_util_event_proto_msgTypes,
	}.Build()
	File_tensorflow_core_util_event_proto = out.File
	file_tensorflow_core_util_event_proto_rawDesc = nil
	file_tensorflow_core_util_event_proto_goTypes = nil
	file_tensorflow_core_util_event_proto_depIdxs = nil
}
